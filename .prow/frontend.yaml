# Obratiti pažnju na komentare "PROMENITI PRI KOPIRANJU" i promeniti
# to što se traži.
# "presubmits" su CI jobovi, odnosno jobovi koji su pokreću za svaki
# Pull Request i za svaki novi commit u okviru Pull Request-a.
presubmits:
  # PROMENITI PRI KOPIRANJU
  # Name treba da bude u formatu "pull-<naziv-repozitorijuma>-test", npr.
  # pull-banka-1-frontend-test ili pull-banka-2-frontend-test
  - name: pull-banka-1-frontend-test
    # always_run znači da će se job pokrenuti za svaki commit,
    # nezavisno od toga šta taj commit menja.
    always_run: true
    decorate: true
    # extra_refs omogućava kloniranje dodatnih repozitorijuma pored
    # repozitorijuma u kome se izvršava job. Ovde ovu opciju koristimo
    # da kloniramo backend repozitorijum kako bi mogli da pokrenemo
    # potrebne backend servise koristeći Docker Compose.
    spec:
      containers:
        # "image" koji se koristi ovde je specijalan tip image-a, tzv. "build image"
        # koji ima sve alate potrebne za izvršavanje CI task-ova. Najbitniji alati
        # uključuju Javu, Maven, Docker i Docker Compose (za pokretanje dependency-a),
        # npm i Google Chrome (za frontend).
        # PROMENITI PRI KOPIRANJU
        # Možete da birate izmenđu dva build image u zavisnosti od Java verzije koju
        # koristite:
        #   - harbor.k8s.elab.rs/base-images/base:java-21-node-18-docker (Java 21)
        #   - harbor.k8s.elab.rs/base-images/base:java-17-node-18-docker (Java 17)
        # Ovde vam generalno verzija Jave nije bitan faktor, tako da možete bilo
        # koji image da odaberete.
        - image: harbor.k8s.elab.rs/base-images/base:java-21-node-18-docker
          command:
            - /bin/bash
            - -c
            - |
              set -euo pipefail

              collectRecordings() {
                cp -r ./cypress/videos /logs/artifacts
                cp -r ./cypress/screenshots /logs/artifacts

                echo "${GCSWEB_URL}/prow-logs/pr-logs/pull/${REPO_OWNER}_${REPO_NAME}/${PULL_NUMBER}/${JOB_NAME}/${BUILD_NUMBER}/artifacts/videos" > /logs/artifacts/videos.link.txt
                echo "${GCSWEB_URL}/prow-logs/pr-logs/pull/${REPO_OWNER}_${REPO_NAME}/${PULL_NUMBER}/${JOB_NAME}/${BUILD_NUMBER}/artifacts/screenshots" > /logs/artifacts/screenshots.link.txt
              }

              cd ..

              git clone -b sprint-9 https://github.com/RAF-SI-2023/Banka-1-Backend.git ./Banka-1-Backend

              cd ./Banka-1-Backend

              sleep 120

              start-docker.sh

              docker compose -f docker.compose.yaml.example up -d

              cd ..
              cd ./Banka-1-Frontend

              sleep 120

              npm install

              trap collectRecordings EXIT

              npm run test:e2e

          securityContext:
            privileged: true
          imagePullPolicy: Always
